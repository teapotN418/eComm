version: '3.9'

services:
  auth:
    container_name: auth_service
    build:
      context: ./auth_service
    ports:
      - "${AUTH_PORT}:8000"
    env_file:
      - .env
#    volumes:
#      - ${CERTS_PATH}/fullchain.pem:/app/fullchain.pem:ro
#      - ${CERTS_PATH}/privkey.pem:/app/privkey.pem:ro
    depends_on:
      postgres:
        condition: service_healthy
  users:
    container_name: users_service
    build:
      context: ./users_service
    ports:
      - "${USERS_PORT}:8000"
    env_file:
      - .env
#    volumes:
#      - ${CERTS_PATH}/fullchain.pem:/app/fullchain.pem:ro
#      - ${CERTS_PATH}/privkey.pem:/app/privkey.pem:ro
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: users_postgres
    image: postgres:16.4-alpine3.20
    ports:
      - "${USERS_POSTGRES_PORT}:${USERS_POSTGRES_PORT}"
    volumes:
      - ./mapped:/var/lib/postgresql/data
    command: -p ${USERS_POSTGRES_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -p ${USERS_POSTGRES_PORT} -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    
